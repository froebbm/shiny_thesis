shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
{
PP_By_Permits <- pp_data %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
PP_By_Permits$Grouping_Var <- "None"
PP_By_Permits$Grouping <- "None"
#Relationship Status
Rel_No_Change <- subset(pp_data, pp_data$Relationship_Status == "No Change")
Rel_Divorsed <- subset(pp_data, pp_data$Relationship_Status == "Got Divorced")
Rel_Married <- subset(pp_data, pp_data$Relationship_Status == "Got Married")
Rel_No_Change <- Rel_No_Change %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
Rel_Divorsed <- Rel_Divorsed %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
Rel_Married <- Rel_Married %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
Rel_No_Change$Grouping_Var <- "No Change"
Rel_Divorsed$Grouping_Var <- "Got Divorced"
Rel_Married$Grouping_Var <- "Got Married"
PP_By_Permits_RS <- rbind(Rel_No_Change, Rel_Divorsed, Rel_Married)
PP_By_Permits_RS$Grouping <- "Relationship_Status"
rm(list=ls(pattern = "Rel_*"))
#Dependent Status
Dep_No_Change <- subset(pp_data, pp_data$Dependent_Status == "No Change")
Dep_Empty_Nester <- subset(pp_data, pp_data$Dependent_Status == "Empty Nester")
Dep_Had_Child <- subset(pp_data, pp_data$Dependent_Status == "Had Child")
Dep_No_Change <- Dep_No_Change %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
Dep_Empty_Nester <- Dep_Empty_Nester %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
Dep_Had_Child <- Dep_Had_Child %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
Dep_No_Change$Grouping_Var <- "No Change"
Dep_Empty_Nester$Grouping_Var <- "Empty Nester"
Dep_Had_Child$Grouping_Var <- "Had Child"
PP_By_Permits_DS <- rbind(Dep_No_Change, Dep_Empty_Nester, Dep_Had_Child)
PP_By_Permits_DS$Grouping <- "Dependent_Status"
rm(list=ls(pattern = "Dep_*"))
#Race
RC_Asian <- subset(pp_data, pp_data$Race == "Asian")
RC_Black <- subset(pp_data, pp_data$Race == "Black")
RC_Hispanic <- subset(pp_data, pp_data$Race == "Hispanic")
RC_Multi <- subset(pp_data, pp_data$Race == "Multi")
RC_Native_American <- subset(pp_data, pp_data$Race == "Native American")
RC_Other <- subset(pp_data, pp_data$Race == "Other")
RC_White <- subset(pp_data, pp_data$Race == "White")
RC_Asian <- RC_Asian %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
RC_Black <- RC_Black %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
RC_Hispanic <- RC_Hispanic %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
RC_Multi <- RC_Multi %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
RC_Native_American <- RC_Native_American %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
RC_Other <- RC_Other %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
RC_White <- RC_White %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
RC_Asian$Grouping_Var <- "Asian"
RC_Black$Grouping_Var <- "Black"
RC_Hispanic$Grouping_Var <- "Hispanic"
RC_Multi$Grouping_Var <- "Multi"
RC_Native_American$Grouping_Var <- "Native American"
RC_Other$Grouping_Var <- "Other"
RC_White$Grouping_Var <- "White"
PP_By_Permits_Race <- rbind(RC_Asian, RC_Black, RC_Hispanic, RC_Multi,
RC_Native_American, RC_Other, RC_White)
PP_By_Permits_Race$Grouping <- "Race"
rm(list = ls(pattern = "RC_*"))
#High School
High_Grad <- subset(pp_data, pp_data$High_School_Grad == "No")
No_HS <- subset(pp_data, pp_data$High_School_Grad == "Yes")
High_Grad <- High_Grad %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
No_HS <- No_HS %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
High_Grad$Grouping_Var <- "Yes"
No_HS$Grouping_Var <- "No"
PP_By_Permits_HS <- rbind(No_HS, High_Grad)
PP_By_Permits_HS$Grouping <- "High_School_Grad"
rm(No_HS, High_Grad)
#Gender
Gen_Female <- subset(pp_data, pp_data$Gender == "Female")
Gen_Male <- subset(pp_data, pp_data$Gender == "Male")
Gen_Trans <- subset(pp_data, pp_data$Gender == "Trans")
Gen_Female <- Gen_Female %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
Gen_Male <- Gen_Male %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
Gen_Trans <- Gen_Trans %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
Gen_Female$Grouping_Var <- "Female"
Gen_Male$Grouping_Var <- "Male"
Gen_Trans$Grouping_Var <- "Trans"
PP_By_Permits_Gender <- rbind(Gen_Female, Gen_Male, Gen_Trans)
PP_By_Permits_Gender$Grouping <- "Gender"
rm(Gen_Female, Gen_Male, Gen_Trans)
#Disability Status
Dis_Became <- subset(pp_data, pp_data$Disability_Status == "Became Disabled")
Dis_Dis <- subset(pp_data, pp_data$Disability_Status == "Disabled")
Dis_LDB <- subset(pp_data, pp_data$Disability_Status == "Lost Disabilty Benifits")
Dis_No <- subset(pp_data, pp_data$Disability_Status == "No")
Dis_Became <- Dis_Became %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
Dis_Dis <- Dis_Dis %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
Dis_LDB <- Dis_LDB %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
Dis_No <- Dis_No %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
Dis_Became$Grouping_Var <- "Became Disabled"
Dis_Dis$Grouping_Var <- "Disabled"
Dis_LDB$Grouping_Var <- "Lost Disabilty Benifits"
Dis_No$Grouping_Var <- "No"
PP_By_Permits_DiSt <- rbind(Dis_Became, Dis_Dis, Dis_LDB, Dis_No)
PP_By_Permits_DiSt$Grouping <- "Disability_Status"
rm(list = ls(pattern = "Dis_*"))
#final data set
PP_By_Permits <- rbind(PP_By_Permits_DiSt, PP_By_Permits_Gender, PP_By_Permits_HS,
PP_By_Permits, PP_By_Permits_RS, PP_By_Permits_DS, PP_By_Permits_Race)
rm(PP_By_Permits_DiSt, PP_By_Permits_Gender, PP_By_Permits_HS,
PP_By_Permits_RS, PP_By_Permits_DS, PP_By_Permits_Race)
write.csv(PP_By_Permits, file = "data/PP_By_Permits.csv")
}
pp_data$total_permits <- pp_data$Com_per_0.5km_one_year +
pp_data$Mix_per_0.5km_one_year + pp_data$Res_per_0.5km_one_year
pp_data$Total_Permits_Group <- NA
X <- 3
Y <- 3 + 7
while(Y < 1433){
pp_data$Total_Permits_Group[pp_data$total_permits >= X
& pp_data$total_permits < Y] <- mean(X,Y)
X = X + 7
Y = Y + 7
}
{
PP_By_Permits <- pp_data %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
PP_By_Permits$Grouping_Var <- "None"
PP_By_Permits$Grouping <- "None"
#Relationship Status
Rel_No_Change <- subset(pp_data, pp_data$Relationship_Status == "No Change")
Rel_Divorsed <- subset(pp_data, pp_data$Relationship_Status == "Got Divorced")
Rel_Married <- subset(pp_data, pp_data$Relationship_Status == "Got Married")
Rel_No_Change <- Rel_No_Change %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
Rel_Divorsed <- Rel_Divorsed %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
Rel_Married <- Rel_Married %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
Rel_No_Change$Grouping_Var <- "No Change"
Rel_Divorsed$Grouping_Var <- "Got Divorced"
Rel_Married$Grouping_Var <- "Got Married"
PP_By_Permits_RS <- rbind(Rel_No_Change, Rel_Divorsed, Rel_Married)
PP_By_Permits_RS$Grouping <- "Relationship_Status"
rm(list=ls(pattern = "Rel_*"))
#Dependent Status
Dep_No_Change <- subset(pp_data, pp_data$Dependent_Status == "No Change")
Dep_Empty_Nester <- subset(pp_data, pp_data$Dependent_Status == "Empty Nester")
Dep_Had_Child <- subset(pp_data, pp_data$Dependent_Status == "Had Child")
Dep_No_Change <- Dep_No_Change %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
Dep_Empty_Nester <- Dep_Empty_Nester %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
Dep_Had_Child <- Dep_Had_Child %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
Dep_No_Change$Grouping_Var <- "No Change"
Dep_Empty_Nester$Grouping_Var <- "Empty Nester"
Dep_Had_Child$Grouping_Var <- "Had Child"
PP_By_Permits_DS <- rbind(Dep_No_Change, Dep_Empty_Nester, Dep_Had_Child)
PP_By_Permits_DS$Grouping <- "Dependent_Status"
rm(list=ls(pattern = "Dep_*"))
#Race
RC_Asian <- subset(pp_data, pp_data$Race == "Asian")
RC_Black <- subset(pp_data, pp_data$Race == "Black")
RC_Hispanic <- subset(pp_data, pp_data$Race == "Hispanic")
RC_Multi <- subset(pp_data, pp_data$Race == "Multi")
RC_Native_American <- subset(pp_data, pp_data$Race == "Native American")
RC_Other <- subset(pp_data, pp_data$Race == "Other")
RC_White <- subset(pp_data, pp_data$Race == "White")
RC_Asian <- RC_Asian %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
RC_Black <- RC_Black %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
RC_Hispanic <- RC_Hispanic %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
RC_Multi <- RC_Multi %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
RC_Native_American <- RC_Native_American %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
RC_Other <- RC_Other %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
RC_White <- RC_White %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
RC_Asian$Grouping_Var <- "Asian"
RC_Black$Grouping_Var <- "Black"
RC_Hispanic$Grouping_Var <- "Hispanic"
RC_Multi$Grouping_Var <- "Multi"
RC_Native_American$Grouping_Var <- "Native American"
RC_Other$Grouping_Var <- "Other"
RC_White$Grouping_Var <- "White"
PP_By_Permits_Race <- rbind(RC_Asian, RC_Black, RC_Hispanic, RC_Multi,
RC_Native_American, RC_Other, RC_White)
PP_By_Permits_Race$Grouping <- "Race"
rm(list = ls(pattern = "RC_*"))
#High School
High_Grad <- subset(pp_data, pp_data$High_School_Grad == "No")
No_HS <- subset(pp_data, pp_data$High_School_Grad == "Yes")
High_Grad <- High_Grad %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
No_HS <- No_HS %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
High_Grad$Grouping_Var <- "Yes"
No_HS$Grouping_Var <- "No"
PP_By_Permits_HS <- rbind(No_HS, High_Grad)
PP_By_Permits_HS$Grouping <- "High_School_Grad"
rm(No_HS, High_Grad)
#Gender
Gen_Female <- subset(pp_data, pp_data$Gender == "Female")
Gen_Male <- subset(pp_data, pp_data$Gender == "Male")
Gen_Trans <- subset(pp_data, pp_data$Gender == "Trans")
Gen_Female <- Gen_Female %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
Gen_Male <- Gen_Male %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
Gen_Trans <- Gen_Trans %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
Gen_Female$Grouping_Var <- "Female"
Gen_Male$Grouping_Var <- "Male"
Gen_Trans$Grouping_Var <- "Trans"
PP_By_Permits_Gender <- rbind(Gen_Female, Gen_Male, Gen_Trans)
PP_By_Permits_Gender$Grouping <- "Gender"
rm(Gen_Female, Gen_Male, Gen_Trans)
#Disability Status
Dis_Became <- subset(pp_data, pp_data$Disability_Status == "Became Disabled")
Dis_Dis <- subset(pp_data, pp_data$Disability_Status == "Disabled")
Dis_LDB <- subset(pp_data, pp_data$Disability_Status == "Lost Disabilty Benifits")
Dis_No <- subset(pp_data, pp_data$Disability_Status == "No")
Dis_Became <- Dis_Became %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
Dis_Dis <- Dis_Dis %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
Dis_LDB <- Dis_LDB %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
Dis_No <- Dis_No %>%
group_by(Total_Permits_Group) %>%
summarise_at(vars(PredictedProb, LL, UL), funs(mean(., na.rm=TRUE)))
Dis_Became$Grouping_Var <- "Became Disabled"
Dis_Dis$Grouping_Var <- "Disabled"
Dis_LDB$Grouping_Var <- "Lost Disabilty Benifits"
Dis_No$Grouping_Var <- "No"
PP_By_Permits_DiSt <- rbind(Dis_Became, Dis_Dis, Dis_LDB, Dis_No)
PP_By_Permits_DiSt$Grouping <- "Disability_Status"
rm(list = ls(pattern = "Dis_*"))
#final data set
PP_By_Permits <- rbind(PP_By_Permits_DiSt, PP_By_Permits_Gender, PP_By_Permits_HS,
PP_By_Permits, PP_By_Permits_RS, PP_By_Permits_DS, PP_By_Permits_Race)
rm(PP_By_Permits_DiSt, PP_By_Permits_Gender, PP_By_Permits_HS,
PP_By_Permits_RS, PP_By_Permits_DS, PP_By_Permits_Race)
write.csv(PP_By_Permits, file = "data/PP_By_Permits.csv")
}
runApp()
runApp()
dist_data <- read.csv("data/dist_data.csv")
dist_data$total_permits <- dist_data$Com_per_0.5km_one_year + dist_data$Mix_per_0.5km_one_year + dist_data$Res_per_0.5km_one_year
dist_data$total_crimes <- dist_data$Violent_Crimes_0.1km_one_year + dist_data$Non_Violent_Crimes_0.1km_one_year
write.csv(dist_data, file = "data/dist_data.csv")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
range(dist_data$total_permits)
range(dist_data$total_permits, na.rm = TRUE)
range(dist_data$total_crimes, na.rm = TRUE)
runApp()
runApp()
getwd()
setwd("C:/Users/brian/OneDrive/Documents/Tufts_Data/H_Drive/Thesis/Tabular Data")
setwd("C:/Users/brian/OneDrive/Documents/Tufts_Data/H_Drive/Thesis/Tabular Data")
Permits <- read.csv("regression_permits.csv")
Crimes <- read.csv("Crimes.csv")
Evictions <- read.csv("all_evictions_MA.csv")
setwd("C:/Users/brian/OneDrive/Documents/Tufts_Data/H_Drive/Thesis/Rent Data")
file_names <- list.files(pattern = "rent*")
years <- as.numeric(substr(file_names, 5,8))
for (i in file_names) {
assign(i, raster(i))
}
("Crimes_Data.csv")
Crimes <- read.csv("Crimes_Data.csv")
setwd("C:/Users/brian/OneDrive/Documents/Tufts_Data/H_Drive/Thesis/Tabular Data")
Crimes <- read.csv("Crimes_Data.csv")
setwd("C:/Users/brian/OneDrive/Documents/Tufts_Data/H_Drive/Thesis/Rent Data")
file_names <- list.files(pattern = "rent*")
years <- as.numeric(substr(file_names, 5,8))
for (i in file_names) {
assign(i, raster(i))
}
file_names <- list.files(pattern = "rent*")
years <- as.numeric(substr(file_names, 5,8))
for (i in file_names) {
assign(i, read.csv(i))
}
file_names <- list.files(pattern = "rent*")
file_names <- list.files(pattern = "Rent*")
file_names <- list.files(pattern = "Rent*.csv")
setwd("C:/Users/brian/OneDrive/Documents/Tufts_Data/H_Drive/Thesis/Rent Data")
file_names <- list.files(pattern = "Rent*.csv")
file_names <- list.files(pattern = "Rent*")
file_names <- list.files(pattern = "Rent*")
years <- as.numeric(substr(file_names, 5,8))
for (i in file_names) {
assign(i, read.csv(i))
}
rent <- rbind_all(file_names)
rent <- rbind_all(ls(pattern = "Rent*"))
rent <- bind_rows(ls(pattern = "Rent*"))
list <- ls(pattern = "Rent*")
rent <- bind_rows(Rent2011.csv, Rent2013.csv, Rent2014.csv, Rent2015.csv,
Rent2016.csv, Rent2017.csv, Rent2018.csv, Rent2019.csv)
rm(Rent2011.csv, Rent2013.csv, Rent2014.csv, Rent2015.csv,
Rent2016.csv, Rent2017.csv, Rent2018.csv, Rent2019.csv)
setwd("C:/Users/brian/OneDrive/Documents/GitHub/shiny_thesis")
rent_summary <- rent %>%
group_by(Year)%>%
summarize(mean=mean(Rent_Per_Bedroom), sd=sd(Rent_Per_Bedroom))
rent_summary$LL <- rent_summary$mean - rent_summary$sd
rent_summary$UL <- rent_summary$mean + rent_summary$sd
View(rent_summary)
rent_summary <- rent %>%
group_by(Year)%>%
summarize(mean_rent=mean(Rent_Per_Bedroom), sd_rent=sd(Rent_Per_Bedroom))
rent_summary$LL_rent <- rent_summary$mean - rent_summary$sd
rent_summary$UL_rent <- rent_summary$mean + rent_summary$sd
rent_summary <- rent %>%
group_by(Year)%>%
summarize(mean_rent=mean(Rent_Per_Bedroom), sd_rent=sd(Rent_Per_Bedroom))
rent_summary$LL_rent <- rent_summary$mean_rent - rent_summary$sd_rent
rent_summary$UL_rent <- rent_summary$mean_rent + rent_summary$sd_rent
View(rent_summary)
View(Evictions)
View(Evictions)
Evictions <- subset(Evictions, Evictions$GEOID != 25)
evict_summary <- Evictions %>%
group_by(Year)%>%
summarize(mean_evict=mean(evictions), sd_evict=sd(evictions))
evict_summary$LL_evict <- evict_summary$mean_evict - evict_summary$sd_evict
evict_summary$UL_evict <- evict_summary$mean_evict + evict_summary$sd_evict
evict_summary <- Evictions %>%
group_by(Year)%>%
summarize(mean_evict=mean(evictions), sd_evict=sd(evictions))
vict_summary <- Evictions %>%
group_by(year)%>%
summarize(mean_evict=mean(evictions), sd_evict=sd(evictions))
evict_summary$LL_evict <- evict_summary$mean_evict - evict_summary$sd_evict
evict_summary$UL_evict <- evict_summary$mean_evict + evict_summary$sd_evict
evict_summary <- Evictions %>%
group_by(year)%>%
summarize(mean_evict=mean(evictions), sd_evict=sd(evictions))
evict_summary$LL_evict <- evict_summary$mean_evict - evict_summary$sd_evict
evict_summary$UL_evict <- evict_summary$mean_evict + evict_summary$sd_evict
rm(vict_summary)
View(evict_summary)
View(Evictions)
evict_summary <- Evictions %>%
group_by(year)%>%
summarize(mean_evict=mean(evictions, na.rm = T), sd_evict=sd(evictions, na.rm = T))
evict_summary$LL_evict <- evict_summary$mean_evict - evict_summary$sd_evict
evict_summary$UL_evict <- evict_summary$mean_evict + evict_summary$sd_evict
View(evict_summary)
View(evict_summary)
View(Evictions)
Evictions <- subset(Evictions, Evictions$GEOID != 25)
Evictions <- subset(Evictions, Evictions$year != 2000)
evict_summary <- Evictions %>%
group_by(year)%>%
summarize(mean_evict=mean(evictions, na.rm = T), sd_evict=sd(evictions, na.rm = T))
evict_summary$LL_evict <- evict_summary$mean_evict - evict_summary$sd_evict
evict_summary$UL_evict <- evict_summary$mean_evict + evict_summary$sd_evict
View(evict_summary)
View(Permits)
permits$Year <- substr(as.character(permits$issued_date),1,4)
Permits$Year <- substr(as.character(Permits$issued_date),1,4)
permits_summary <- Permits %>%
group_by(Year)%>%
summarize(mean_evict=mean(Permits, na.rm = T), sd_evict=sd(Permits, na.rm = T))
permits_summary$LL_evict <- permits_summary$mean_evict - permits_summary$sd_evict
permits_summary$UL_evict <- permits_summary$mean_evict + permits_summary$sd_evict
permits_summary <- Permits %>%
group_by(Year)%>%
summarize(mean_permits=mean(Permits, na.rm = T), sd_permits=sd(Permits, na.rm = T))
permits_summary$LL_permits <- permits_summary$mean_permits - permits_summary$sd_permits
permits_summary$UL_permits <- permits_summary$mean_permits + permits_summary$sd_permits
permits_summary <- count(Permits, vars = Year)
View(permits_summary)
crimes_summary <- count(Crimes, vars = YEAR)
View(crimes_summary)
setwd("C:/Users/brian/OneDrive/Documents/Tufts_Data/H_Drive/Thesis/Tabular Data")
Evictions <- read.csv("all_evictions_MA.csv")
setwd("C:/Users/brian/OneDrive/Documents/GitHub/shiny_thesis")
write.csv(crimes_summary, "data/crimes_summary.csv")
write.csv(permits_summary, "data/permits_summary.csv")
write.csv(evict_summary, "data/evict_summary.csv")
write.csv(rent_summary, "data/rent_summary.csv")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(rent_summary)
runApp()
evict_summary <- subset(Evictions, Evictions$GEOID == 25)
write.csv(evict_summary, "data/evict_summary.csv")
View(evict_summary)
runApp()
runApp()
install.packages("shinythemes")
runApp()
runApp()
runApp()
install.packages('rsconnect')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='froebbm',
token='1FC21376F5974709D0F62128703FA5D6',
secret='<SECRET>')
rsconnect::setAccountInfo(name='froebbm',
token='1FC21376F5974709D0F62128703FA5D6',
secret='<SECRET>')
rsconnect::setAccountInfo(name='froebbm',
token='1FC21376F5974709D0F62128703FA5D6',
secret='lMXXXh8ICQd/ZBvHxPggmWgbXA2/9t4pIM+TB1CN')
library(rsconnect)
rsconnect::deployApp()
shiny::runApp()
library(rsconnect)
rsconnect::deployApp()
library(rsconnect)
rsconnect::deployApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(rsconnect)
rsconnect::deployApp()
